// This file will be generated by the Supabase CLI.
// Run: npx supabase gen types typescript --project-id <YOUR_PROJECT_REF> --schema public > types/supabase.ts
// Or for local dev: npx supabase gen types typescript --local > types/supabase.ts

// Example of what it might contain (will be much more extensive):
export type Json = string | number | boolean | null | { [key: string]: Json | undefined } | Json[]

export interface Database {
  public: {
    Tables: {
      contracts: {
        Row: {
          id: string
          created_at: string
          pdf_url?: string | null
          user_id?: string | null
          first_party_id: string
          second_party_id: string
          promoter_id: string
          contract_valid_from?: string | null
          contract_valid_until?: string | null
          job_title?: string | null
          status?: string | null
          work_location?: string | null
          contract_start_date?: string | null // YYYY-MM-DD
          contract_end_date?: string | null // YYYY-MM-DD
          email?: string | null // For notifications
          // ... other fields from your schema
        }
        Insert: {
          id?: string
          created_at?: string
          pdf_url?: string | null
          user_id?: string
          first_party_id: string
          second_party_id: string
          promoter_id: string
          contract_valid_from?: string | null
          contract_valid_until?: string | null
          job_title?: string | null
          status?: string | null
          work_location?: string | null
          contract_start_date?: string | null
          contract_end_date?: string | null
          email?: string | null
          // ... other fields
        }
        Update: {
          id?: string
          created_at?: string
          pdf_url?: string | null
          user_id?: string
          first_party_id?: string
          second_party_id?: string
          promoter_id?: string
          contract_valid_from?: string | null
          contract_valid_until?: string | null
          job_title?: string | null
          status?: string | null
          work_location?: string | null
          contract_start_date?: string | null
          contract_end_date?: string | null
          email?: string | null
          // ... other fields
        }
        Relationships: [
          {
            foreignKeyName: "contracts_first_party_id_fkey"
            columns: ["first_party_id"]
            referencedRelation: "parties"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contracts_promoter_id_fkey"
            columns: ["promoter_id"]
            referencedRelation: "promoters"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contracts_second_party_id_fkey"
            columns: ["second_party_id"]
            referencedRelation: "parties"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contracts_user_id_fkey"
            columns: ["user_id"]
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      parties: {
        Row: {
          id: string
          name_en: string
          name_ar: string
          crn: string
          type?: "Employer" | "Client" | "Generic" | null
          // ... other fields
        }
        Insert: {
          id?: string
          name_en: string
          name_ar: string
          crn: string
          type?: "Employer" | "Client" | "Generic" | null
          // ... other fields
        }
        Update: {
          id?: string
          name_en?: string
          name_ar?: string
          crn?: string
          type?: "Employer" | "Client" | "Generic" | null
          // ... other fields
        }
        Relationships: []
      }
      promoters: {
        Row: {
          id: string
          name_en: string
          name_ar: string
          id_card_number: string
          id_card_url?: string | null
          passport_url?: string | null
          // ... other fields
        }
        Insert: {
          id?: string
          name_en: string
          name_ar: string
          id_card_number: string
          id_card_url?: string | null
          passport_url?: string | null
          // ... other fields
        }
        Update: {
          id?: string
          name_en?: string
          name_ar?: string
          id_card_number?: string
          id_card_url?: string | null
          passport_url?: string | null
          // ... other fields
        }
        Relationships: []
      }
      // ... other tables
    }
    Views: {
      // ... views
    }
    Functions: {
      // ... functions
    }
    Enums: {
      // ... enums
    }
    CompositeTypes: {
      // ... composite types
    }
  }
}

// Helper types (optional, but can be useful)
export type Tables<T extends keyof Database["public"]["Tables"]> =
  Database["public"]["Tables"][T]["Row"]
export type Enums<T extends keyof Database["public"]["Enums"]> = Database["public"]["Enums"][T]
// ... more helpers if needed
